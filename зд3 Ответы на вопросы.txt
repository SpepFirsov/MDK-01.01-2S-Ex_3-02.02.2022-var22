1.Что понимается под термином «класс»?
Класс представляет собой шаблон, по которому определяется форма объекта.
2.Какие элементы определяются в составе класса?
Константы,Поля,Методы,Свойства,Конструкторы,
Индексаторы,Операции,События,Типы
3.Каково соотношение понятий «класс» и «объект»?
Класс – это абстрактный тип данных. ... Описав класс,
можно создать его экземпляр – объект. 
Объект – это уже конкретный представитель класса.
4.Что понимается под термином «члены класса»?
Члены класса включают все члены, объявленные в этом классе, а также все члены 
(кроме конструкторов и методов завершения),
объявленные во всех классах в иерархии наследования данного класса.
5.Константы,Поля,Методы,Свойства,Конструкторы,
Индексаторы,Операции,События,Типы,События
6.Какие члены класса содержат код?
Члены-функции.
7.Какие члены класса содержат данные?
переменные экземпляра
8.Перечислите пять разновидностей членов класса специфичных для языка C#.
переменные экземпляра, статические переменные, константы,методы, конструкторы, деструкторы
9.Что понимается под термином «конструктор»?
специальный блок инструкций, вызываемый при создании объекта.
10.Сколько конструкторов может содержать класс языка C#?
Каждый класс может иметь только один конструктор по умолчанию.
11.Приведите синтаксис описания класса в общем виде.
Проиллюстри-руйте его фрагментом программы на языке C#.
class имя_класса {

// Объявление переменных экземпляра.

доступ тип переменная1; //...

// Объявление методов.

доступ возращаемый_тип метод1 (параметры)

{ // тело метода }

Пример

class Animal{

public string Name;

protected int Type;

public int Animal(, int T, string N){

Type=T;

Name=N; }

public int GetWeight(){return Weight;}

}
12.Какие модификаторы типа доступа Вам известны?
private,public,protected,internal
13.В чем заключаются особенности доступа членов класса с модифика-тором public?
Когда член класса обозначается спецификатором public, 
он становится доступным из любого другого кода в программе, 
включая и методы, определенные в других классах.
14.В чем заключаются особенности доступа членов класса с модифика-тором private?
Приватный компонент доступен только в рамках своего класса или структуры.
15.В чем заключаются особенности доступа членов класса с модифика-тором protected?
такой компонент класса доступен из любого места в своем классе или в производных классах. 
При этом производные классы могут располагаться в других сборках.
16.В чем заключаются особенности доступа членов класса с модифика-тором internal?
компоненты класса или структуры доступен из любого места кода в той же сборке,
однако он недоступен для других программ и сборок.
17.Какое ключевое слово языка C# используется при создании объекта?
this
18.Приведите синтаксис создания объекта в общем виде.
Проиллюстри-руйте его фрагментом программы на языке C#.
UserInfo myInfo = new UserInfo();

myInfo.Name = "Alexandr";

myInfo.Family = "Erohin";

myInfo.Adress = "ViceCity";

myInfo.Age = 26;
19.В чем состоит назначение конструктора?
Конструктор предназначен для формирования экземпляра объекта класса.
20.Каждый ли класс языка C# имеет конструктор?
Каждый класс C# снабжается конструктором по умолчанию
21.Какие умолчания для конструкторов приняты в языке C#?
конструктор получает такое же имя, как и у его класса, 
а с точки зрения синтаксиса он подобен методу.
22.Каким  значением  инициализируются  по  умолчанию переменные ссылочного типа?
null
23.В каком случае по умолчанию не используется конструктор класса?
Конструктор по умолчанию не нужен, если объект не нуждается в инициализации.
24.Приведите синтаксис конструктора класса в общем виде.
Проиллю-стрируйте его фрагментом программы на языке C#.
public class Car

{

public string Name { get; set; }

public int maxSpeed { get; set; }

public Car(string name, int max_speed)

{

Name = name;

maxSpeed = max_speed;

}

}
25.Что понимается под термином «деструктор»?
это функция-член, которая вызывается автоматически, когда объект выходит из области
действия или явно уничтожается вызовом метода delete
26.В чем состоит назначение деструктора?
Деструктор обеспечивает соответствующую очистку объектов указанного типа.
27.Приведите синтаксис деструктора класса в общем виде. 
Проиллюст-рируйте его фрагментом программы на языке C#.
28.Что понимается под термином «наследование»?
Наследование— концепция объектно-ориентированного программирования, согласно которой абстрактный 
тип данных может наследовать данные и функциональность некоторого существующего типа, 
способствуя повторному использованию компонентов программного обеспечения.
29.Что общего имеет дочерний классс родительским?
Общие атрибуты,свойства
30.В чем состоит различие между дочерним и родительским классами?
Родительский класс содержит дочерний класс. 
Где в качестве производного класса наследуется базовый класс.